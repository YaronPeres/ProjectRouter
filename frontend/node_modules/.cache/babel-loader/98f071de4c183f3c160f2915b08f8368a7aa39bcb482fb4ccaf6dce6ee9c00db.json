{"ast":null,"code":"var _jsxFileName = \"/Users/yaron/code/courses-projects/maxschwarzmuller react/12-adv-starting-project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { Await, defer, json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  // loader cant be used on higher lvl than im fetching the data (only same lvl or below(children))\n  // const data = useLoaderData();\n  const {\n    events\n  } = useLoaderData();\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  // const events = data.events;\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n  // <>\n  //   <EventsList events={events} />\n  // </>\n  ;\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    return json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  //defer helps with loading part of the component while waiting the loading of the rest of the component\n  // to defer we pass an object\n  defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","Await","defer","json","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","events","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/yaron/code/courses-projects/maxschwarzmuller react/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\nimport { Await, defer, json, useLoaderData } from \"react-router-dom\";\n\nfunction EventsPage() {\n  // loader cant be used on higher lvl than im fetching the data (only same lvl or below(children))\n  // const data = useLoaderData();\n  const { events } = useLoaderData();\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  // const events = data.events;\n  return (\n    <Await resolve={events}></Await>\n    // <>\n    //   <EventsList events={events} />\n    // </>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    return json({ message: \"Could not fetch events\" }, { status: 500 });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  //defer helps with loading part of the component while waiting the loading of the rest of the component\n  // to defer we pass an object\n  defer({\n    events: loadEvents(),\n  });\n}\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA;EACA,MAAM;IAAEC;EAAO,CAAC,GAAGL,aAAa,CAAC,CAAC;EAClC;EACA;EACA;EACA;EACA,oBACEE,OAAA,CAACL,KAAK;IAACS,OAAO,EAAED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ;EAC/B;EACA;EACA;EAAA;AAEJ;AAACN,EAAA,CAdQD,UAAU;EAAA,QAGEH,aAAa;AAAA;AAAAW,EAAA,GAHzBR,UAAU;AAgBnB,eAAeA,UAAU;AAEzB,eAAeS,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,OAAOhB,IAAI,CAAC;MAAEiB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AACA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB;EACA;EACApB,KAAK,CAAC;IACJO,MAAM,EAAEO,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}