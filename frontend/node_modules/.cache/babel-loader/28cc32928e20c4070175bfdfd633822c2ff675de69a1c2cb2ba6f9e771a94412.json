{"ast":null,"code":"var _jsxFileName = \"/Users/yaron/code/courses-projects/maxschwarzmuller react/12-adv-starting-project/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action({\n  params\n}) {\n  const eventId = params.eventId;\n  fetch(\"http://localhost:8080/events\" + eventId);\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","console","log","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","action","$RefreshReg$"],"sources":["/Users/yaron/code/courses-projects/maxschwarzmuller react/12-adv-starting-project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import React from \"react\";\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nfunction EventDetailPage() {\n  const data = useRouteLoaderData(\"event-detail\");\n  console.log(data);\n\n  return <EventItem event={data.event} />;\n}\n\nexport default EventDetailPage;\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected events\" },\n      { status: 500 }\n    );\n  } else {\n    return response;\n  }\n}\nexport async function action({ params }) {\n  const eventId = params.eventId;\n  fetch(\"http://localhost:8080/events\" + eventId);\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC;EAC/CO,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjB,oBAAOH,OAAA,CAACF,SAAS;IAACQ,KAAK,EAAEH,IAAI,CAACG;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACR,EAAA,CALQD,eAAe;EAAA,QACTJ,kBAAkB;AAAA;AAAAc,EAAA,GADxBV,eAAe;AAOxB,eAAeA,eAAe;AAE9B,OAAO,eAAeW,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMvB,IAAI,CACR;MAAEwB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AACA,OAAO,eAAeK,MAAMA,CAAC;EAAER;AAAO,CAAC,EAAE;EACvC,MAAME,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9BE,KAAK,CAAC,8BAA8B,GAAGF,OAAO,CAAC;AACjD;AAAC,IAAAL,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}