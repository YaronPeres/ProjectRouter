{"ast":null,"code":"var _jsxFileName = \"/Users/yaron/code/courses-projects/maxschwarzmuller react/12-adv-starting-project/frontend/src/pages/EventsPage.js\";\n//first step\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// //dummy data to mimic real fetching data\n// const EVENTS = [\n//   { id: \"p1\", title: \"Product 1\" },\n//   { id: \"p2\", title: \"Product 2\" },\n//   { id: \"p3\", title: \"Product 3\" },\n// ];\n// function EventsPage() {\n//   return (\n//     <>\n//       <h1>Events</h1>\n//       <ul>\n//         {EVENTS.map((event) => (\n//           <li key={event.id}>\n//             <Link to={event.id}>{event.title}</Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </>\n//   );\n// }\n\n// export default EventsPage;\n\n// import { useEffect, useState } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n  //     // const response = await fetch(\"http://localhost:8080/events\");\n\n  //     // if (!response.ok) {\n  //     //   setError(\"Fetching events failed.\");\n  //     // } else {\n  //     //   const resData = await response.json();\n  //     //   setFetchedEvents(resData.events);\n  //     // }\n  //     setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), !isLoading && fetchedEvents && /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true);\n}\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","children","style","textAlign","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","error","fetchedEvents","events","_c","$RefreshReg$"],"sources":["/Users/yaron/code/courses-projects/maxschwarzmuller react/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["//first step\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// //dummy data to mimic real fetching data\n// const EVENTS = [\n//   { id: \"p1\", title: \"Product 1\" },\n//   { id: \"p2\", title: \"Product 2\" },\n//   { id: \"p3\", title: \"Product 3\" },\n// ];\n// function EventsPage() {\n//   return (\n//     <>\n//       <h1>Events</h1>\n//       <ul>\n//         {EVENTS.map((event) => (\n//           <li key={event.id}>\n//             <Link to={event.id}>{event.title}</Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </>\n//   );\n// }\n\n// export default EventsPage;\n\n// import { useEffect, useState } from \"react\";\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n  //     // const response = await fetch(\"http://localhost:8080/events\");\n\n  //     // if (!response.ok) {\n  //     //   setError(\"Fetching events failed.\");\n  //     // } else {\n  //     //   const resData = await response.json();\n  //     //   setFetchedEvents(resData.events);\n  //     // }\n  //     setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n  return (\n    <>\n      <div style={{ textAlign: \"center\" }}>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n      </div>\n      {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\n    </>\n  );\n}\n\nexport default EventsPage;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EACpB;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA;MAAKK,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,GACjCG,SAAS,iBAAIP,OAAA;QAAAI,QAAA,EAAG;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC9BC,KAAK,iBAAIZ,OAAA;QAAAI,QAAA,EAAIQ;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACL,CAACJ,SAAS,IAAIM,aAAa,iBAAIb,OAAA,CAACF,UAAU;MAACgB,MAAM,EAAED;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACrE,CAAC;AAEP;AAACI,EAAA,GA9BQZ,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}