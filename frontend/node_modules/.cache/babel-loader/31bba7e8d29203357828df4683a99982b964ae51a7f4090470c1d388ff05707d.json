{"ast":null,"code":"var _jsxFileName = \"/Users/yaron/code/courses-projects/maxschwarzmuller react/12-adv-starting-project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { defer, json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  // loader cant be used on higher lvl than im fetching the data (only same lvl or below(children))\n  const data = useLoaderData();\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    return json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  defer;\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","defer","json","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/yaron/code/courses-projects/maxschwarzmuller react/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\nimport { defer, json, useLoaderData } from \"react-router-dom\";\n\nfunction EventsPage() {\n  // loader cant be used on higher lvl than im fetching the data (only same lvl or below(children))\n  const data = useLoaderData();\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  const events = data.events;\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    return json({ message: \"Could not fetch events\" }, { status: 500 });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  defer;\n}\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9D,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B;EACA;EACA;EACA,MAAMQ,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACL,UAAU;MAACW,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CAZQD,UAAU;EAAA,QAEJL,aAAa;AAAA;AAAAc,EAAA,GAFnBT,UAAU;AAcnB,eAAeA,UAAU;AAEzB,eAAeU,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,OAAOnB,IAAI,CAAC;MAAEoB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AACA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvBvB,KAAK;AACP;AAAC,IAAAgB,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}